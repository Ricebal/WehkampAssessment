// <auto-generated />
using BasketAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasketAPI.Migrations
{
    [DbContext(typeof(BasketContext))]
    partial class BasketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BasketAPI.Models.Basket", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("basket_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketId"));

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("session_id")
                        .HasAnnotation("Relational:JsonPropertyName", "session_id");

                    b.Property<int>("ShippingCosts")
                        .HasColumnType("int")
                        .HasColumnName("shipping_costs")
                        .HasAnnotation("Relational:JsonPropertyName", "shipping_costs");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int")
                        .HasColumnName("total_price")
                        .HasAnnotation("Relational:JsonPropertyName", "total_price");

                    b.HasKey("BasketId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("BasketAPI.Models.BasketItem", b =>
                {
                    b.Property<int>("BasketItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("basket_item_id")
                        .HasAnnotation("Relational:JsonPropertyName", "basket_item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketItemId"));

                    b.Property<int>("BasketId")
                        .HasColumnType("int")
                        .HasColumnName("basket_id");

                    b.Property<int>("NumberOfProducts")
                        .HasColumnType("int")
                        .HasColumnName("number_of_products")
                        .HasAnnotation("Relational:JsonPropertyName", "number_of_products");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("size")
                        .HasAnnotation("Relational:JsonPropertyName", "size");

                    b.HasKey("BasketItemId");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItems");

                    b.HasAnnotation("Relational:JsonPropertyName", "items");
                });

            modelBuilder.Entity("BasketAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price")
                        .HasAnnotation("Relational:JsonPropertyName", "price");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasAnnotation("Relational:JsonPropertyName", "product");
                });

            modelBuilder.Entity("BasketAPI.Models.BasketItem", b =>
                {
                    b.HasOne("BasketAPI.Models.Basket", null)
                        .WithMany("Items")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasketAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BasketAPI.Models.Basket", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
